name: Build PSConf2023
on:
  push:
    branches:
      - feature-labels
    paths-ignore:
      - CHANGELOG.md
      - .github/**

defaults:
  run:
    shell: pwsh

env:
  buildFolderName: output
  buildArtifactName: output
  testResultFolderName: testResults
  defaultBranch: main

jobs:
  Build_Stage_Package_Module:
    name: Package Module
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
      - name: Evaluate Next Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          configFilePath: GitVersion.yml
      - name: Builde & Package Module
        env:
          ModuleVersion: ${{ env.gitVersion.NuGetVersionV2 }}
        run: |
          ./build.ps1 -ResolveDependency -Tasks pack -Verbose
      - name: Publish Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}

  Test_Stage_test_linux:
    name: Linux
    runs-on: ubuntu-latest
    needs:
      - Build_Stage_Package_Module
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}
      - name: Run Tests
        run: |
          ./build.ps1 -Tasks test
      - name: Publish Test Results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        # if: (${{ job.status }} != 'cancelled')
        with:
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
          name: Linux
      - name: Publish Test Artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        # if: (${{ job.status }} != 'cancelled')
        with:
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
          name: CodeCoverageLinux


  Test_Stage_Code_Coverage:
    name: Publish Code Coverage
    if: success() || failure()
    runs-on: ubuntu-latest
    needs:
      - Build_Stage_Package_Module
      - Test_Stage_test_linux
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Set Environment Variables
        run: |
          $repositoryOwner,$repositoryName = $env:GITHUB_REPOSITORY -split '/'
          echo "##vso[task.setvariable variable=RepositoryOwner;isOutput=true]$repositoryOwner"
          echo "##vso[task.setvariable variable=RepositoryName;isOutput=true]$repositoryName"
      - name: Download Pipeline Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.buildArtifactName }}
          path: ${{ env.buildFolderName }}
      - name: Download Test Artifact Linux
        uses: actions/download-artifact@v4
        with:
          name: 'CodeCoverageLinux'
          path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/CodeCoverageLinux/
      - name: Publish Linux Test Results
        id: linux-test-results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          nunit_files: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/CodeCoverageLinux/NUnit*.xml
          check_name: Linux Test Result
      - name: 'Merge Code Coverage files'
        run: |
          ./build.ps1 -Tasks merge
      # -name: 'Publish GitHub Code Coverage'
