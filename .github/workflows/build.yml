#Error (line 56): the step 'PublishTestResults@2' does not have a conversion path yet
#Error (line 59): the step 'PublishTestResults@2' does not have a conversion path yet
#Error (line 84): the step 'PublishTestResults@2' does not have a conversion path yet
#Error (line 87): the step 'PublishTestResults@2' does not have a conversion path yet
name: Build Module
on: [push]
defaults:
  run:
    shell: pwsh
    # branches:
    # - main
    # paths-ignore:
    # - CHANGELOG.md
    # tags:
    # - v*
    # tags-ignore:
    # - '*-*'
env:
  buildFolderName: output
  buildArtifactName: output
  testResultFolderName: testResults
  defaultBranch: main
  Agent.Source.Git.ShallowFetchDepth: 0

jobs:
  Build_Stage_Package_Module:
    name: Package Module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Calculate ModuleVersion (GitVersion)
        run: |
          dotnet tool install --global GitVersion.Tool
          $gitVersionObject = dotnet-gitversion | ConvertFrom-Json
          $gitVersionObject.PSObject.Properties.ForEach{
              Write-Host -Object "Setting Task Variable '${{ env.$_.Name }}' with value '${{ env.$_.Value }}'."
              Write-Host -Object "##vso[task.setvariable variable=${{ env.$_.Name }};]${{ env.$_.Value }}"
          }
          Write-Host -Object "##vso[build.updatebuildnumber]${{ env.$gitVersionObject.FullSemVer }}"

      - name: Build and Package Module
        env:
          ModuleVersion: ${{ env.NuGetVersionV2 }}
        run: |
          & .\build.ps1 -task pack
      - name: Publish Build Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.buildFolderName }}/
  # Test_Stage_test_linux:
  #   name: Linux
  #   runs-on: ubuntu-latest
  #   needs:
  #     - Build_Stage_Package_Module
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v2
  #     - name: Run Tests
  #       shell: powershell
  #     - # "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #       name: Publish Test Results
  #       run: |
  #         echo "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #         #task: PublishTestResults@2
  #         #displayName: Publish Test Results
  #         #condition: succeededOrFailed()
  #         #inputs:
  #         #  testresultsformat: NUnit
  #         #  testresultsfiles: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
  #         #  testruntitle: Linux
  #       if: (${{ job.status }} != 'cancelled')
  #     - name: Publish Test Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
  #         name: CodeCoverageLinux
#   Test_Stage_test_windows_core:
#     name: Windows (PowerShell)
#     runs-on: windows-latest
#     needs:
#       - Build_Stage_Package_Module
#     steps:
#       - uses: actions/checkout@main
#       - name: Download Build Artifact
#         uses: actions/download-artifact@v4
#       - name: Run Tests
#         run: |
#           & .\build.ps1 -tasks test
# #      - # "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
#         name: Publish Test Results
#         run: |
#           & .\build.ps1 -tasks test
#           echo "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
#           #task: PublishTestResults@2
#           #displayName: Publish Test Results
#           #condition: succeededOrFailed()
#           #inputs:
#           #  testresultsformat: NUnit
#           #  testresultsfiles: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
#           #  testruntitle: Windows (PowerShell)
#         if: (${{ job.status }} != 'cancelled')
#       - name: Publish Test Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
#           name: CodeCoverageWinPS7
  # Test_Stage_test_windows_ps:
  #   name: Windows (Windows PowerShell)
  #   runs-on: windows-latest
  #   needs:
  #     - Build_Stage_Package_Module
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v2
  #     - name: Run Tests
  #       shell: powershell
  #     - # "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #       name: Publish Test Results
  #       run: |
  #         echo "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #         #task: PublishTestResults@2
  #         #displayName: Publish Test Results
  #         #condition: succeededOrFailed()
  #         #inputs:
  #         #  testresultsformat: NUnit
  #         #  testresultsfiles: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
  #         #  testruntitle: Windows (Windows PowerShell)
  #       if: (${{ job.status }} != 'cancelled')
  #     - name: Publish Test Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
  #         name: CodeCoverageWinPS51
  # Test_Stage_test_macos:
  #   name: macOS
  #   runs-on: macos-latest
  #   needs:
  #     - Build_Stage_Package_Module
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v2
  #     - name: Run Tests
  #       shell: powershell
  #     - # "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #       name: Publish Test Results
  #       run: |
  #         echo "Error: the step 'PublishTestResults@2' does not have a conversion path yet"
  #         #task: PublishTestResults@2
  #         #displayName: Publish Test Results
  #         #condition: succeededOrFailed()
  #         #inputs:
  #         #  testresultsformat: NUnit
  #         #  testresultsfiles: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/NUnit*.xml
  #         #  testruntitle: MacOS
  #       if: (${{ job.status }} != 'cancelled')
  #     - name: Publish Test Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
  #         name: CodeCoverageMacOS
  # Test_Stage_Code_Coverage:
  #   name: Publish Code Coverage
  #   runs-on: ubuntu-latest
  #   needs:
  #     - Build_Stage_Package_Module
  #     # - Test_Stage_test_macos
  #     # - Test_Stage_test_linux
  #     # - Test_Stage_test_windows_core
  #     # - Test_Stage_test_windows_ps
  #   steps:
  #     - uses: actions/checkout@main
  #     - name: Set Environment Variables
  #       run: |
  #         $repositoryOwner,$repositoryName = $env:BUILD_REPOSITORY_NAME -split '/'
  #         echo "##vso[task.setvariable variable=RepositoryOwner;isOutput=true]$repositoryOwner"
  #         echo "##vso[task.setvariable variable=RepositoryName;isOutput=true]$repositoryName"
  #       shell: pwsh
  #     - name: Download Pipeline Artifact
  #       uses: actions/download-artifact@v2
  #     # - name: Download Test Artifact macOS
  #     #   uses: actions/download-artifact@v2
  #     # - name: Download Test Artifact Linux
  #     #   uses: actions/download-artifact@v2
  #     # - name: Download Test Artifact Windows (PS 5.1)
  #     #   uses: actions/download-artifact@v2
  #     # - name: Download Test Artifact Windows (PS7)
  #     #   uses: actions/download-artifact@v2
  # Deploy_Stage_Deploy_Module:
  #   name: Deploy Module
  #   runs-on: ubuntu-latest
  #   needs:
  #     # - Test_Stage_test_linux
  #     # - Test_Stage_test_windows_core
  #     # - Test_Stage_test_windows_ps
  #     # - Test_Stage_test_macos
  #     - Test_Stage_Code_Coverage
  #   if: (success() && ((github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')) && contains(variables['System.TeamFoundationCollectionUri'], 'Proud Rabbit'))
  #   steps:
  #     - uses: actions/checkout@main
  #     - name: Download Build Artifact
  #       uses: actions/download-artifact@v2
  #     - name: Publish Release
  #       env:
  #         GitHubToken: ${{ env.GitHubToken }}
  #         GalleryApiToken: ${{ env.GalleryApiToken }}
  #         ReleaseBranch: ${{ env.defaultBranch }}
  #         MainGitBranch: ${{ env.defaultBranch }}
  #     - name: Send Changelog PR
  #       env:
  #         GitHubToken: ${{ env.GitHubToken }}
  #         ReleaseBranch: ${{ env.defaultBranch }}
  #         MainGitBranch: ${{ env.defaultBranch }}
